什么是scope？
	scope是一个指向应用module的object，也是表达式的执行上下文。其被放置于一个类似应用的DOM结构的层次结构中。

angular是如何知道变量发生了变化？
答：要知道一个变量变了，有两种方式：
	1、能通过固定的接口才能改变变量的值，比如说只能通过set之类的方法来设置变量的值，一旦set被调用时比较一下就知道了。但是这种方法的缺点是写法繁琐。
	2、脏检查，将原对象复制一份快照，在某个时间里，比较现在对象与快照的值，如果不一样就表明发生了变化，这个策略要保留两份变量，而且要遍历对象，比较每个属性，这样会有一定的性能问题。

angular的策略：使用脏检查
	1、不会脏检查所有的对象，当对象被绑定到html中，这个对象添加为检查对象(watcher)。
	2、不会脏检查所有的属性，同样当属性被绑定后，这个属性会被列为检查属性。

在angular程序初始化时，会将绑定的对象的属性添加为监听对象，也就是说一个对象绑定了N个属性，就会添加N个watcher。

什么时候去脏检查？
答：angular所系统的方法中都会触发比较事件，比如：controller初始化的时候，所有以ng-开头的事件执行后，都会触发脏检查。

手动触发脏检查：
	$apply仅仅只是进入angular的context，然后通过$digest去触发脏检查。
	$apply如果不给参数的话，会检查该$scope里的所有监听的属性，所以推荐添加上参数。

$digest():
	所属的scope和其所有子scope的脏检查，脏检查又会触发$watch。

	不建议直接调用$digest，而应该使用$apply，$apply其实不能把信息直接传给$digest，因为之间还用$eval门卫把关，如果$apply带的表达式不合法，$eval会把错误送交给$exceptionHandler；合法才会触发digest，所以更安全。